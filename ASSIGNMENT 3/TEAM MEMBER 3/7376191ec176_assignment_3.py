# -*- coding: utf-8 -*-
"""7376191EC176_Assignment 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DnG4wV9_CVSGHGIEbFnx1lq_j10nSrWn
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Convolution2D,MaxPooling2D,Flatten,Dense
from tensorflow.keras.preprocessing.image import ImageDataGenerator as idm
import numpy as np
import warnings
#Supressing warnings
warnings.filterwarnings('ignore')

from google.colab import drive
drive.mount('/content/drive')

# Creating augmentation on training variable
train_flowers=idm(rescale=1./255,zoom_range=0.2,horizontal_flip=True)

# Passing training data to train variable
Xtrain = train_flowers.flow_from_directory('/content/drive/MyDrive/flowers/train',target_size=(76,76),class_mode='categorical',batch_size=100)

# Creating augmentation on testing variable
test_flowers=idm(rescale=1./255)

# Passing testing data to test variable
Xtest = test_flowers.flow_from_directory('/content/drive/MyDrive/flowers/test',target_size=(76,76),class_mode='categorical',batch_size=100)

Flower_model = Sequential()
Flower_model.add(Convolution2D(32,(3,3),activation='relu',input_shape=(76,76,3)))
Flower_model.add(MaxPooling2D(pool_size=(2,2)))
Flower_model.add(Flatten())
Flower_model.add(Dense(300,activation='relu'))
Flower_model.add(Dense(150,activation='relu'))
Flower_model.add(Dense(5,activation='softmax'))

Flower_model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

Flower_model.fit_generator(Xtrain,steps_per_epoch= len (Xtrain),epochs= 8,validation_data=Xtest,validation_steps= len (Xtest))

Flower_model.save('Flower.h5')

from tensorflow.keras.preprocessing import image

test_img=image.load_img('/content/drive/MyDrive/flowers/validate/rose.jpg',target_size=(76,76))
test_img

x=image.img_to_array(test_img)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category=['daisy','dandelion','rose','sunflower','tulip']
Prediction_category[predicted]

test_img=image.load_img('/content/drive/MyDrive/flowers/validate/dandelion.jpg',target_size=(76,76))
test_img

x=image.img_to_array(test_img)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category=['daisy','dandelion','rose','sunflower','tulip']
Prediction_category[predicted]

test_img=image.load_img('/content/drive/MyDrive/flowers/validate/sunflower.jpg',target_size=(76,76))
test_img

x=image.img_to_array(test_img)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category=['daisy','dandelion','rose','sunflower','tulip']
Prediction_category[predicted]

test_img=image.load_img('/content/drive/MyDrive/flowers/validate/tulip.jpg',target_size=(76,76))
test_img

x=image.img_to_array(test_img)
x=np.expand_dims(x,axis=0)
predicted=np.argmax(Flower_model.predict(x))
Prediction_category=['daisy','dandelion','rose','sunflower','tulip']
Prediction_category[predicted]